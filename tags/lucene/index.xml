<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" 
  xmlns:content="http://purl.org/rss/1.0/modules/content/" 
  xmlns:dc="http://purl.org/dc/elements/1.1/" 
  xmlns:atom="http://www.w3.org/2005/Atom" 
  xmlns:sy="http://purl.org/rss/1.0/modules/syndication/" 
  xmlns:media="http://search.yahoo.com/mrss/">
  <channel>
    <title>lucene on Zisis Tachtsidis</title>
    <link>https://www.zisistach.org/tags/lucene/</link>
    <description>Recent content in lucene on Zisis Tachtsidis</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <managingEditor>zistach@runbox.com (Zisis Tachtsidis)</managingEditor>
    <webMaster>zistach@runbox.com (Zisis Tachtsidis)</webMaster>
    <copyright>©2022, All Rights Reserved</copyright>
    <lastBuildDate>Tue, 15 Feb 2022 12:00:06 +0900</lastBuildDate>
    <sy:updatePeriod>daily</sy:updatePeriod>
    
        <atom:link href="https://www.zisistach.org/tags/lucene/index.xml" rel="self" type="application/rss+xml" />
    

      
      <item>
        <title>Solr Function queries</title>
        <link>https://www.zisistach.org/posts/solr-function-playground/</link>
        <pubDate>Tue, 15 Feb 2022 12:00:06 +0900</pubDate>
        <author>zistach@runbox.com (Zisis Tachtsidis)</author>
        <atom:modified>Tue, 15 Feb 2022 12:00:06 +0900</atom:modified>
        <guid>https://www.zisistach.org/posts/solr-function-playground/</guid>
        <description>Introduction One of the most interesting Solr features is definitely &amp;ldquo;Function Queries&amp;rdquo;. They allow you to dynamically alter the ranking of your documents, by applying functions on existing index fields. More details and a complete list of the available functions are documented at https://solr.apache.org/guide/8_9/function-queries.html
Use case - Boost recent documents A pretty common requirement on search ranking is to combine the absolute relevancy of results (name it tf/idf, BM25 or whatever) with a boost on most recent documents.</description>
        
        <dc:creator>Zisis</dc:creator>
        <media:content url="https://www.zisistach.orgimages/article-icons/1-function.png" medium="image"><media:title type="html">featured image</media:title></media:content>
        
        
        
          
            
              <category>solrcloud</category>
            
          
            
              <category>solr</category>
            
          
            
              <category>lucene</category>
            
          
            
              <category>java</category>
            
          
            
              <category>function-queries</category>
            
          
            
              <category>ranking</category>
            
          
        
        
          
            
              <category>Feature</category>
            
          
        
        
          
            
              <category>Software</category>
            
          
        
      </item>
      
      <item>
        <title>SolrCloud performance tuning</title>
        <link>https://www.zisistach.org/posts/solr-performance/</link>
        <pubDate>Sun, 11 Mar 2018 12:00:06 +0900</pubDate>
        <author>zistach@runbox.com (Zisis Tachtsidis)</author>
        <atom:modified>Sun, 11 Mar 2018 12:00:06 +0900</atom:modified>
        <guid>https://www.zisistach.org/posts/solr-performance/</guid>
        <description>Introduction In this post we’ll focus on SolrCloud stability and search performance. Most of the lessons have been learned the hard way, fighting them on production. The list is nowhere complete and rest assured that there are more Solr performance related storied to tell. Take note that the ones discussed below are not covered in great detail as it&amp;rsquo;d make a very long post. Some of them are even worth their own individual post.</description>
        
        <dc:creator>Zisis</dc:creator>
        <media:content url="https://www.zisistach.orgimages/article-icons/1-performance.png" medium="image"><media:title type="html">featured image</media:title></media:content>
        
        
        
          
            
              <category>solrcloud</category>
            
          
            
              <category>lucene</category>
            
          
            
              <category>java</category>
            
          
            
              <category>performance</category>
            
          
            
              <category>distributed</category>
            
          
        
        
          
            
              <category>Performance</category>
            
          
            
              <category>Robustness</category>
            
          
        
        
          
            
              <category>Software</category>
            
          
        
      </item>
      

    
  </channel>
</rss>
